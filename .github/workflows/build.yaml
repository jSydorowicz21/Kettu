# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  buildAndRelease:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false
      
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        run: pnpm install
      
      - run: |
          pnpm build --release-branch=${{ github.ref_name }} --build-minify
          
      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Push Build to dist
        run: |
            rm -rf $GITHUB_WORKSPACE/builds/* 2>/dev/null || true
            cp -r dist/* $GITHUB_WORKSPACE/builds || true
            cd $GITHUB_WORKSPACE/builds
            git config --local user.email "actions@github.com"
            git config --local user.name "GitHub Actions"
            git add .
            git commit -m "Build $GITHUB_SHA" || exit 0
            git push
          
      - name: Purge CDN cache
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
            curl https://purge.jsdelivr.net/gh/C0C0B01/pupu-build-infos@${{ github.ref_name }}/pupu.js


      
